/*!
 * parse-gitignore-ts
 * TypeScript version of parse-gitignore <https://github.com/jonschlinkert/parse-gitignore>
 * Original Copyright (c) 2015-present, Jon Schlinkert.
 * Released under the MIT License.
 */
interface ParseOptions {
    path?: string;
    dedupe?: boolean;
    unique?: boolean;
    ignore?: string[];
    unignore?: string[];
    formatSection?: (section: Section) => string;
    [key: string]: any;
}
interface Section {
    name: string;
    comment?: string;
    patterns: string[];
}
interface ParsedResult {
    sections: Section[];
    patterns: string[];
    path?: string;
    input?: Buffer;
    format: (opts?: ParseOptions) => string;
    dedupe: (opts?: ParseOptions) => ParsedResult;
    globs: (opts?: ParseOptions) => GlobResult[];
}
interface GlobResult {
    type: 'ignore' | 'unignore';
    path: string | null;
    patterns: string[];
    index: number;
}
declare const patterns: (input: string | Buffer) => string[];
/**
 * Parse a .gitignore file or string into an object.
 */
declare const parse: (input: string | Buffer | ParsedResult, options?: ParseOptions) => ParsedResult;
/**
 * Parse a .gitignore file into an object.
 */
declare const parseFile: (filepath: string, options?: ParseOptions) => ParsedResult;
/**
 * De-duplicate sections and patterns.
 */
declare const dedupe: (input: string | Buffer | ParsedResult, options?: ParseOptions) => ParsedResult;
/**
 * Convert gitignore patterns to glob patterns.
 */
declare const globs: (input: string | Buffer | ParsedResult, options?: ParseOptions) => GlobResult[];
/**
 * Formats a .gitignore section
 */
declare const formatSection: (section?: Section) => string;
/**
 * Format a .gitignore file from the given input or object from `.parse()`.
 */
declare const format: (input: string | Buffer | ParsedResult, options?: ParseOptions) => string;
interface ParseGitignore {
    (input: string | Buffer | ParsedResult, options?: ParseOptions): ParsedResult;
    file: typeof parseFile;
    parse: typeof parse;
    dedupe: typeof dedupe;
    format: typeof format;
    globs: typeof globs;
    formatSection: typeof formatSection;
    patterns: typeof patterns;
}
declare const parseGitignore: ParseGitignore;

export { type GlobResult, type ParseOptions, type ParsedResult, type Section, dedupe, parseGitignore as default, format, formatSection, globs, parse, parseFile, patterns };
